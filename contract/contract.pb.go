// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: contract/contract.proto

package contract

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompositeRule_Operator int32

const (
	CompositeRule_AND CompositeRule_Operator = 0
	CompositeRule_OR  CompositeRule_Operator = 1
)

// Enum value maps for CompositeRule_Operator.
var (
	CompositeRule_Operator_name = map[int32]string{
		0: "AND",
		1: "OR",
	}
	CompositeRule_Operator_value = map[string]int32{
		"AND": 0,
		"OR":  1,
	}
)

func (x CompositeRule_Operator) Enum() *CompositeRule_Operator {
	p := new(CompositeRule_Operator)
	*p = x
	return p
}

func (x CompositeRule_Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompositeRule_Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_contract_contract_proto_enumTypes[0].Descriptor()
}

func (CompositeRule_Operator) Type() protoreflect.EnumType {
	return &file_contract_contract_proto_enumTypes[0]
}

func (x CompositeRule_Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompositeRule_Operator.Descriptor instead.
func (CompositeRule_Operator) EnumDescriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{7, 0}
}

type VerificationTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contracts []*Contract `protobuf:"bytes,1,rep,name=contracts,proto3" json:"contracts,omitempty"`
}

func (x *VerificationTestRequest) Reset() {
	*x = VerificationTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_contract_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationTestRequest) ProtoMessage() {}

func (x *VerificationTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationTestRequest.ProtoReflect.Descriptor instead.
func (*VerificationTestRequest) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{0}
}

func (x *VerificationTestRequest) GetContracts() []*Contract {
	if x != nil {
		return x.Contracts
	}
	return nil
}

type VerificationTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passed bool           `protobuf:"varint,1,opt,name=passed,proto3" json:"passed,omitempty"`
	Failed []*TestFailure `protobuf:"bytes,2,rep,name=failed,proto3" json:"failed,omitempty"`
}

func (x *VerificationTestResponse) Reset() {
	*x = VerificationTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_contract_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationTestResponse) ProtoMessage() {}

func (x *VerificationTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationTestResponse.ProtoReflect.Descriptor instead.
func (*VerificationTestResponse) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{1}
}

func (x *VerificationTestResponse) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

func (x *VerificationTestResponse) GetFailed() []*TestFailure {
	if x != nil {
		return x.Failed
	}
	return nil
}

type TestFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interaction string `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
	FailureMsg  string `protobuf:"bytes,2,opt,name=failure_msg,json=failureMsg,proto3" json:"failure_msg,omitempty"`
}

func (x *TestFailure) Reset() {
	*x = TestFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_contract_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestFailure) ProtoMessage() {}

func (x *TestFailure) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestFailure.ProtoReflect.Descriptor instead.
func (*TestFailure) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{2}
}

func (x *TestFailure) GetInteraction() string {
	if x != nil {
		return x.Interaction
	}
	return ""
}

func (x *TestFailure) GetFailureMsg() string {
	if x != nil {
		return x.FailureMsg
	}
	return ""
}

type PublishContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contracts *Contract `protobuf:"bytes,1,opt,name=contracts,proto3" json:"contracts,omitempty"`
}

func (x *PublishContractRequest) Reset() {
	*x = PublishContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_contract_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishContractRequest) ProtoMessage() {}

func (x *PublishContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishContractRequest.ProtoReflect.Descriptor instead.
func (*PublishContractRequest) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{3}
}

func (x *PublishContractRequest) GetContracts() *Contract {
	if x != nil {
		return x.Contracts
	}
	return nil
}

type PublishContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ErrorMsg string `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
}

func (x *PublishContractResponse) Reset() {
	*x = PublishContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_contract_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishContractResponse) ProtoMessage() {}

func (x *PublishContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishContractResponse.ProtoReflect.Descriptor instead.
func (*PublishContractResponse) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{4}
}

func (x *PublishContractResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *PublishContractResponse) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

type Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service      string         `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Consumer     string         `protobuf:"bytes,2,opt,name=consumer,proto3" json:"consumer,omitempty"`
	Interactions []*Interaction `protobuf:"bytes,3,rep,name=interactions,proto3" json:"interactions,omitempty"`
}

func (x *Contract) Reset() {
	*x = Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_contract_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract) ProtoMessage() {}

func (x *Contract) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract.ProtoReflect.Descriptor instead.
func (*Contract) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{5}
}

func (x *Contract) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Contract) GetConsumer() string {
	if x != nil {
		return x.Consumer
	}
	return ""
}

func (x *Contract) GetInteractions() []*Interaction {
	if x != nil {
		return x.Interactions
	}
	return nil
}

type Interaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Method        string         `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Request       *anypb.Any     `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	Response      *anypb.Any     `protobuf:"bytes,4,opt,name=response,proto3" json:"response,omitempty"`
	WantError     bool           `protobuf:"varint,5,opt,name=wantError,proto3" json:"wantError,omitempty"`
	Rules         *CompositeRule `protobuf:"bytes,6,opt,name=rules,proto3" json:"rules,omitempty"`
	Preconditions []string       `protobuf:"bytes,7,rep,name=preconditions,proto3" json:"preconditions,omitempty"`
}

func (x *Interaction) Reset() {
	*x = Interaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_contract_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interaction) ProtoMessage() {}

func (x *Interaction) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interaction.ProtoReflect.Descriptor instead.
func (*Interaction) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{6}
}

func (x *Interaction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Interaction) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Interaction) GetRequest() *anypb.Any {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *Interaction) GetResponse() *anypb.Any {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *Interaction) GetWantError() bool {
	if x != nil {
		return x.WantError
	}
	return false
}

func (x *Interaction) GetRules() *CompositeRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *Interaction) GetPreconditions() []string {
	if x != nil {
		return x.Preconditions
	}
	return nil
}

type CompositeRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator    CompositeRule_Operator `protobuf:"varint,1,opt,name=operator,proto3,enum=contract.CompositeRule_Operator" json:"operator,omitempty"`
	IntRules    []*IntRule             `protobuf:"bytes,2,rep,name=intRules,proto3" json:"intRules,omitempty"`
	StringRules []*StringRule          `protobuf:"bytes,3,rep,name=stringRules,proto3" json:"stringRules,omitempty"`
	DoubleRules []*DoubleRule          `protobuf:"bytes,4,rep,name=doubleRules,proto3" json:"doubleRules,omitempty"`
	NestedRules []*CompositeRule       `protobuf:"bytes,5,rep,name=nestedRules,proto3" json:"nestedRules,omitempty"`
}

func (x *CompositeRule) Reset() {
	*x = CompositeRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_contract_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompositeRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompositeRule) ProtoMessage() {}

func (x *CompositeRule) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompositeRule.ProtoReflect.Descriptor instead.
func (*CompositeRule) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{7}
}

func (x *CompositeRule) GetOperator() CompositeRule_Operator {
	if x != nil {
		return x.Operator
	}
	return CompositeRule_AND
}

func (x *CompositeRule) GetIntRules() []*IntRule {
	if x != nil {
		return x.IntRules
	}
	return nil
}

func (x *CompositeRule) GetStringRules() []*StringRule {
	if x != nil {
		return x.StringRules
	}
	return nil
}

func (x *CompositeRule) GetDoubleRules() []*DoubleRule {
	if x != nil {
		return x.DoubleRules
	}
	return nil
}

func (x *CompositeRule) GetNestedRules() []*CompositeRule {
	if x != nil {
		return x.NestedRules
	}
	return nil
}

type IntRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    string  `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Min      int64   `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	CheckMin bool    `protobuf:"varint,3,opt,name=checkMin,proto3" json:"checkMin,omitempty"`
	Max      int64   `protobuf:"varint,4,opt,name=max,proto3" json:"max,omitempty"`
	CheckMax bool    `protobuf:"varint,5,opt,name=checkMax,proto3" json:"checkMax,omitempty"`
	Allowed  []int64 `protobuf:"varint,6,rep,packed,name=allowed,proto3" json:"allowed,omitempty"`
}

func (x *IntRule) Reset() {
	*x = IntRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_contract_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntRule) ProtoMessage() {}

func (x *IntRule) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntRule.ProtoReflect.Descriptor instead.
func (*IntRule) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{8}
}

func (x *IntRule) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *IntRule) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *IntRule) GetCheckMin() bool {
	if x != nil {
		return x.CheckMin
	}
	return false
}

func (x *IntRule) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *IntRule) GetCheckMax() bool {
	if x != nil {
		return x.CheckMax
	}
	return false
}

func (x *IntRule) GetAllowed() []int64 {
	if x != nil {
		return x.Allowed
	}
	return nil
}

type DoubleRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    string  `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Min      float64 `protobuf:"fixed64,2,opt,name=min,proto3" json:"min,omitempty"`
	CheckMin bool    `protobuf:"varint,3,opt,name=checkMin,proto3" json:"checkMin,omitempty"`
	Max      float64 `protobuf:"fixed64,4,opt,name=max,proto3" json:"max,omitempty"`
	CheckMax bool    `protobuf:"varint,5,opt,name=checkMax,proto3" json:"checkMax,omitempty"`
}

func (x *DoubleRule) Reset() {
	*x = DoubleRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_contract_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleRule) ProtoMessage() {}

func (x *DoubleRule) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleRule.ProtoReflect.Descriptor instead.
func (*DoubleRule) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{9}
}

func (x *DoubleRule) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *DoubleRule) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *DoubleRule) GetCheckMin() bool {
	if x != nil {
		return x.CheckMin
	}
	return false
}

func (x *DoubleRule) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *DoubleRule) GetCheckMax() bool {
	if x != nil {
		return x.CheckMax
	}
	return false
}

type StringRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field      string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	MatchRegex string   `protobuf:"bytes,2,opt,name=matchRegex,proto3" json:"matchRegex,omitempty"`
	Allowed    []string `protobuf:"bytes,3,rep,name=allowed,proto3" json:"allowed,omitempty"`
}

func (x *StringRule) Reset() {
	*x = StringRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_contract_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringRule) ProtoMessage() {}

func (x *StringRule) ProtoReflect() protoreflect.Message {
	mi := &file_contract_contract_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringRule.ProtoReflect.Descriptor instead.
func (*StringRule) Descriptor() ([]byte, []int) {
	return file_contract_contract_proto_rawDescGZIP(), []int{10}
}

func (x *StringRule) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *StringRule) GetMatchRegex() string {
	if x != nil {
		return x.MatchRegex
	}
	return ""
}

func (x *StringRule) GetAllowed() []string {
	if x != nil {
		return x.Allowed
	}
	return nil
}

var File_contract_contract_proto protoreflect.FileDescriptor

var file_contract_contract_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b,
	0x0a, 0x17, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x22, 0x61, 0x0a, 0x18, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x12,
	0x2d, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x50,
	0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4d, 0x73, 0x67,
	0x22, 0x4a, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x22, 0x4e, 0x0a, 0x17,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x7b, 0x0a, 0x08,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x39,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8e, 0x02, 0x0a, 0x0b, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x61, 0x6e, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x61, 0x6e, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc4, 0x02, 0x0a, 0x0d, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x36, 0x0a, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0b, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x6e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0b, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x22, 0x1b, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x52, 0x10,
	0x01, 0x22, 0x95, 0x01, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x61, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x61, 0x78, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x22, 0x7e, 0x0a, 0x0a, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x61, 0x78, 0x22, 0x5c, 0x0a, 0x0a, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x67, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x67, 0x65, 0x78, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x32, 0xc8, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x20,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x69, 0x75, 0x78, 0x30, 0x30, 0x34, 0x37, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contract_contract_proto_rawDescOnce sync.Once
	file_contract_contract_proto_rawDescData = file_contract_contract_proto_rawDesc
)

func file_contract_contract_proto_rawDescGZIP() []byte {
	file_contract_contract_proto_rawDescOnce.Do(func() {
		file_contract_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_contract_contract_proto_rawDescData)
	})
	return file_contract_contract_proto_rawDescData
}

var file_contract_contract_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_contract_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_contract_contract_proto_goTypes = []interface{}{
	(CompositeRule_Operator)(0),      // 0: contract.CompositeRule.Operator
	(*VerificationTestRequest)(nil),  // 1: contract.VerificationTestRequest
	(*VerificationTestResponse)(nil), // 2: contract.VerificationTestResponse
	(*TestFailure)(nil),              // 3: contract.TestFailure
	(*PublishContractRequest)(nil),   // 4: contract.PublishContractRequest
	(*PublishContractResponse)(nil),  // 5: contract.PublishContractResponse
	(*Contract)(nil),                 // 6: contract.Contract
	(*Interaction)(nil),              // 7: contract.Interaction
	(*CompositeRule)(nil),            // 8: contract.CompositeRule
	(*IntRule)(nil),                  // 9: contract.IntRule
	(*DoubleRule)(nil),               // 10: contract.DoubleRule
	(*StringRule)(nil),               // 11: contract.StringRule
	(*anypb.Any)(nil),                // 12: google.protobuf.Any
}
var file_contract_contract_proto_depIdxs = []int32{
	6,  // 0: contract.VerificationTestRequest.contracts:type_name -> contract.Contract
	3,  // 1: contract.VerificationTestResponse.failed:type_name -> contract.TestFailure
	6,  // 2: contract.PublishContractRequest.contracts:type_name -> contract.Contract
	7,  // 3: contract.Contract.interactions:type_name -> contract.Interaction
	12, // 4: contract.Interaction.request:type_name -> google.protobuf.Any
	12, // 5: contract.Interaction.response:type_name -> google.protobuf.Any
	8,  // 6: contract.Interaction.rules:type_name -> contract.CompositeRule
	0,  // 7: contract.CompositeRule.operator:type_name -> contract.CompositeRule.Operator
	9,  // 8: contract.CompositeRule.intRules:type_name -> contract.IntRule
	11, // 9: contract.CompositeRule.stringRules:type_name -> contract.StringRule
	10, // 10: contract.CompositeRule.doubleRules:type_name -> contract.DoubleRule
	8,  // 11: contract.CompositeRule.nestedRules:type_name -> contract.CompositeRule
	4,  // 12: contract.ContractService.PublishContract:input_type -> contract.PublishContractRequest
	1,  // 13: contract.ContractService.VerificationTest:input_type -> contract.VerificationTestRequest
	5,  // 14: contract.ContractService.PublishContract:output_type -> contract.PublishContractResponse
	2,  // 15: contract.ContractService.VerificationTest:output_type -> contract.VerificationTestResponse
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_contract_contract_proto_init() }
func file_contract_contract_proto_init() {
	if File_contract_contract_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contract_contract_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_contract_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_contract_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_contract_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_contract_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_contract_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_contract_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_contract_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompositeRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_contract_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_contract_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubleRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_contract_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contract_contract_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contract_contract_proto_goTypes,
		DependencyIndexes: file_contract_contract_proto_depIdxs,
		EnumInfos:         file_contract_contract_proto_enumTypes,
		MessageInfos:      file_contract_contract_proto_msgTypes,
	}.Build()
	File_contract_contract_proto = out.File
	file_contract_contract_proto_rawDesc = nil
	file_contract_contract_proto_goTypes = nil
	file_contract_contract_proto_depIdxs = nil
}
